name: Build & Publish

on:
  push:
    branches:
      - main
    paths:
      # Only run when the Cargo.toml file changes, since that's the only way the version will change
      - "Cargo.toml"

jobs:
  getversion:
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.value }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Git Version
        id: version
        uses: SebRollen/toml-action@v1.0.2
        with:
          file: 'Cargo.toml'
          field: 'package.version'

  settag:
    name: Create Git Tag from Version
    needs: getversion
    runs-on: ubuntu-latest
    outputs:
      isnewtag: ${{ needs.getversion.outputs.version }}
    steps:
      - name: Create the Tag
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Try to create the tag, if it already exists, it will fail and set the output to false
            try {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "refs/tags/${{ needs.getversion.outputs.version }}",
                sha: context.sha
              })
              core.setOutput('isnewtag', 'true')
            } catch (error) {
                if (error.status === 422) {
                  core.setOutput('isnewtag', 'false')
                } else {
                  throw error
                }
            }

  build:
    name: Build & Push
    needs:
      - settag
      - getversion
    runs-on: ubuntu-latest
    if: ${{ needs.settag.outputs.isnewtag == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=registry,ref=ghcr.io/tooboredtocode/share-music-cache:latest
          cache-to: type=registry,ref=ghcr.io/tooboredtocode/share-music-cache:latest,mode=max
          tags: |
            ghcr.io/tooboredtocode/share-music:latest
            ghcr.io/tooboredtocode/share-music:${{ needs.getversion.outputs.version }}
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=1
