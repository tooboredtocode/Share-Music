name: Build & Publish

on:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/build_and_deploy.yaml"
      - "src/**"
      - "build.rs"
      - "Cargo.lock"
      - "Cargo.toml"
      - "Dockerfile"

jobs:
  getversion:
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.value }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Git Version
        id: version
        uses: SebRollen/toml-action@v1.0.1
        with:
          file: 'Cargo.toml'
          field: 'package.version'

  settag:
    name: Create Git Tag from Version
    needs: getversion
    runs-on: ubuntu-latest
    steps:
      - name: Create the Tag
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ needs.getversion.outputs.version }}",
              sha: context.sha
            })

  build:
    name: Build & Push
    needs: getversion
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=registry,ref=ghcr.io/tooboredtocode/share-music:latest
          cache-to: type=inline
          tags: |
            ghcr.io/tooboredtocode/share-music:latest
            ghcr.io/tooboredtocode/share-music:${{ needs.getversion.outputs.version }}
          build-args: |
            version=${{ needs.getversion.outputs.version }}